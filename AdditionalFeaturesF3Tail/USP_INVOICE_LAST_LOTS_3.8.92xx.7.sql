USE [eplus_work]
GO
/****** Object:  StoredProcedure [dbo].[USP_INVOICE_LAST_LOTS]    Script Date: 14.04.2023 9:52:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
Модификация системы наценки:
Берем все цены в сети у которых есть остаток больше нуля
Откидываем максимальную цену 
Берем вторую от максимальной и ставим розничной
Если при стандартной наценки цена меньше рассчитанной 
*/

ALTER PROCEDURE [dbo].[USP_INVOICE_LAST_LOTS](
    @ID_GOODS BIGINT,
    @ID_STORE BIGINT,
    @ID_CONTRACTOR BIGINT
)
AS
    CREATE TABLE #LAST_LOT_INFO(
        GROUP_ID INT,
        NAME VARCHAR(100),
        VALUE_CHAR VARCHAR(300),
        VALUE_DATE DATETIME,
        VALUE_MONEY MONEY,
        IN_SHORT BIT,
        VALUE_TYPE INT,
        IS_PRICE_SAL BIT,
        PRIORITY INT
    )

    CREATE TABLE #LAST_LOT_INFO_STORE(
        PRICE_SUP0 MONEY,
        PRICE_SUP MONEY,
        PRICE_SAL MONEY,
        QTY_REM MONEY,
        DATE_OP DATETIME,
        SUPPLIER VARCHAR(255)
    )

	IF OBJECT_ID('tempdb..#LOT') IS NOT NULL DROP TABLE #LOT

	CREATE TABLE #LOT(
		ID_LOT_GLOBAL UNIQUEIDENTIFIER,
		INVOICE_DATE DATETIME,
		QUANTITY_REM DECIMAL(15,7),
		QUANTITY_ADD DECIMAL(15,7),
		ID_SCALING_RATIO BIGINT,
		ID_STORE BIGINT,
		ID_GOODS BIGINT,
		ID_TABLE BIGINT,
		ID_CONTRACTOR BIGINT,
		PRICE_SAL MONEY, -- Доп поле
		MAX_PRICE MONEY
	)

	IF OBJECT_ID('tempdb..#LOT_RAW') IS NOT NULL DROP TABLE #LOT_RAW

	CREATE TABLE #LOT_RAW(
		ID_LOT_GLOBAL UNIQUEIDENTIFIER,
		INVOICE_DATE DATETIME,
		QUANTITY_REM DECIMAL(15,7),
		QUANTITY_ADD DECIMAL(15,7),
		ID_SCALING_RATIO BIGINT,
		ID_STORE BIGINT,
		ID_GOODS BIGINT,
		ID_TABLE BIGINT,
		PRICE_SAL MONEY, -- Доп поле
		MAX_PRICE MONEY
	)

	

	DECLARE @ON_SAMPLE_PARAMETERS BIT 
	SET @ON_SAMPLE_PARAMETERS = CASE 
	WHEN EXISTS(SELECT TOP 1 1 FROM PRICING_MODEL_SAMPLE_PARAMETERS SP
				INNER JOIN STORE S ON S.ID_STORE_GLOBAL = SP.ID_STORE_GLOBAL
				INNER JOIN GOODS G ON G.ID_GOODS_GLOBAL = SP.ID_GOODS_GLOBAL
				WHERE S.ID_STORE = @ID_STORE AND G.ID_GOODS = @ID_GOODS) THEN 1
	ELSE 0
	END

	IF (@ON_SAMPLE_PARAMETERS = 0)
	BEGIN
		insert into #LOT_RAW
		SELECT
			L.ID_LOT_GLOBAL,
			L.INVOICE_DATE,
			L.QUANTITY_REM,
			L.QUANTITY_ADD,
			L.ID_SCALING_RATIO,
			L.ID_STORE,
			L.ID_GOODS,
			L.ID_TABLE,
			L.PRICE_SAL, -- Доп поле
			MAX_PRICE = MAX(L.PRICE_SAL) OVER (PARTITION BY L.ID_GOODS) -- максимальная цена по папртиям
		FROM LOT L
		WHERE L.ID_TABLE in (2,30) 
			-- AND (L.QUANTITY_ADD > 0 or L.QUANTITY_REM > 0) -- в прошлой версии не работало
			AND L.QUANTITY_REM >0
			AND L.ID_GOODS = @ID_GOODS
			AND L.ID_DOCUMENT in (select ID_INVOICE_GLOBAL from INVOICE where DOCUMENT_STATE = 'PROC' 
			--and INVOICE.INCOMING_DATE > GETDATE()-45
			) -- берем только приходные за три месяца
			AND @ID_GOODS not in (select ID_GOODS from goods where GOODS.important =1) -- Отбрасываем ЖВ препараты 
		
		delete from #LOT_RAW
		where PRICE_SAL = MAX_PRICE -- удаляем максимальные цены из списка партий подбора 
	END

	

	CREATE UNIQUE CLUSTERED INDEX IX_TEMP_T2 ON #LOT_RAW (ID_LOT_GLOBAL)

	IF (@ON_SAMPLE_PARAMETERS = 0)
	BEGIN
		insert into #LOT
		select L.*
			,S.ID_CONTRACTOR
		from #LOT_RAW L
			inner join STORE S on S.ID_STORE = L.ID_STORE
	END
	ELSE
	BEGIN
		INSERT INTO #LOT
		SELECT
			L.ID_LOT_GLOBAL,
			L.INVOICE_DATE,
			L.QUANTITY_REM,
			L.QUANTITY_ADD,
			L.ID_SCALING_RATIO,
			L.ID_STORE,
			L.ID_GOODS,
			L.ID_TABLE,
			S.ID_CONTRACTOR
		FROM PRICING_MODEL_SAMPLE_PARAMETERS SP
		INNER JOIN LOT L ON L.ID_LOT_GLOBAL = SP.ID_LOT_GLOBAL
		INNER JOIN STORE S on S.ID_STORE = L.ID_STORE
		INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
		WHERE G.ID_GOODS = @ID_GOODS
	END
	   	 	

	CREATE UNIQUE CLUSTERED INDEX IX_TEMP_T3 ON #LOT (ID_LOT_GLOBAL)
    
    INSERT INTO #LAST_LOT_INFO_STORE
    SELECT 
        (L.PRICE_SUP - L.PVAT_SUP) * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
        L.PRICE_SUP * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
        L.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
        REM.QTY_REM,
        LAST_LOT.DATE_OP,
        SUP.NAME
    FROM LOT L
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
		INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = L.ID_SUPPLIER
		INNER JOIN (
			SELECT TOP 1
				L.ID_LOT_GLOBAL,
				DATE_OP = L.INVOICE_DATE
			FROM #LOT L
			WHERE L.QUANTITY_ADD > 0
				AND L.ID_STORE = @ID_STORE
			ORDER BY L.INVOICE_DATE DESC
		) LAST_LOT ON LAST_LOT.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
		LEFT JOIN (
			SELECT 
                L.ID_GOODS, 
                QTY_REM = SUM(L.QUANTITY_REM * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
			FROM #LOT L
				INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
			WHERE L.ID_STORE = @ID_STORE 
				AND L.QUANTITY_REM > 0
			GROUP BY L.ID_GOODS
        ) REM ON REM.ID_GOODS = L.ID_GOODS
    
    CREATE TABLE #LAST_LOT_INFO_AP(
        PRICE_SAL MONEY    
    )
    
    INSERT INTO #LAST_LOT_INFO_AP
    SELECT PRICE_SAL
    FROM ASSORTMENT_PLAN AP
    WHERE ID_GOODS = @ID_GOODS
		AND ID_CONTRACTOR = @ID_CONTRACTOR
		AND DATE_DELETED IS NOT NULL
    
    INSERT INTO #LAST_LOT_INFO
    SELECT
        GROUP_ID = 1,
        NAME ='Цена поставщика',
        VALUE_CHAR = CONVERT(VARCHAR(300), NULL),
        VALUE_DATE = CONVERT(DATETIME, NULL),
        VALUE_MONEY = LLI.PRICE_SUP0,
        IN_SHORT = CONVERT(BIT, 0),
        VALUE_TYPE = 3,
        IS_PRICE_SAL = 0,
        PRORITY = 0
    FROM #LAST_LOT_INFO_STORE LLI
    UNION
    SELECT
        1,
        'Цена поставщика с НДС',
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        LLI.PRICE_SUP,
        CONVERT(BIT, 0),
        3,
        0,
        1
    FROM #LAST_LOT_INFO_STORE LLI
    UNION
    SELECT
        1,
        'Цена отпускная',
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        LLI.PRICE_SAL,
        1,
        3,
        1,
        2
    FROM #LAST_LOT_INFO_STORE LLI
    UNION
    SELECT
        1,
        'Остаток на складе',
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        QTY_REM,
        CONVERT(BIT, 0),
        3,
        0,
        3
    FROM #LAST_LOT_INFO_STORE LLI
    UNION
    SELECT
        1,
        'Последняя поставка',
        CONVERT(VARCHAR(300), NULL),
        DATE_OP,
        CONVERT(MONEY, NULL),
        1,
        2,
        0,
        4
    FROM #LAST_LOT_INFO_STORE LLI
    UNION
    SELECT
        1,
        'Поставщик',
        SUPPLIER,
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        1,
        1,
        0,
        5
    FROM #LAST_LOT_INFO_STORE LLI
     
    INSERT INTO #LAST_LOT_INFO
    SELECT
        3,
        CONVERT(VARCHAR(100), NULL),
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        0,
        3,
        0,
        0
    FROM #LAST_LOT_INFO_AP
    UNION ALL
    SELECT
        3,
        CONVERT(VARCHAR(100), NULL),
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        0,
        3,
        0,
        1
    FROM #LAST_LOT_INFO_AP
    UNION ALL
    SELECT
        3,
        'Цена акции',
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        PRICE_SAL,
        1,
        3,
        1,
        2
    FROM #LAST_LOT_INFO_AP
    UNION ALL
    SELECT
        3,
        CONVERT(VARCHAR(100), NULL),
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        0,
        3,
        0,
        3
    FROM #LAST_LOT_INFO_AP
    UNION ALL
    SELECT
        3,
        CONVERT(VARCHAR(100), NULL),
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        0,
        3,
        0,
        4
    FROM #LAST_LOT_INFO_AP
    UNION ALL
    SELECT
        3,
        CONVERT(VARCHAR(100), NULL),
        CONVERT(VARCHAR(300), NULL),
        CONVERT(DATETIME, NULL),
        CONVERT(MONEY, NULL),
        0,
        3,
        0,
        5
    FROM #LAST_LOT_INFO_AP
    
	DECLARE @USE_NETWORK_INFO BIT
	SET @USE_NETWORK_INFO = ISNULL((select top(1) VALUE from SYS_OPTION WHERE CODE = 'USE_LAST_LOT_NETWORK_INFO'),1)

	IF @USE_NETWORK_INFO = 1 
	BEGIN 

		CREATE TABLE #LAST_LOT_INFO_NETWORK(
			PRICE_SUP0 MONEY,
			PRICE_SUP MONEY,
			PRICE_SAL MONEY,
			QTY_REM MONEY,
			DATE_OP DATETIME,
			SUPPLIER VARCHAR(255)
		)

		INSERT INTO #LAST_LOT_INFO_NETWORK
		SELECT 
			(L.PRICE_SUP - L.PVAT_SUP) * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
			L.PRICE_SUP * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
			L.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
			CONVERT(MONEY, NULL),
			LAST_LOT.DATE_OP,
			SUP.NAME
		FROM LOT L
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
		INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = L.ID_SUPPLIER
		INNER JOIN (
			SELECT TOP 1
				L.ID_LOT_GLOBAL,
				DATE_OP = L.INVOICE_DATE
			FROM #LOT L
				INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
			WHERE L.ID_TABLE in (2,30) 
				AND L.QUANTITY_ADD > 0
				--AND S.ID_CONTRACTOR = @ID_CONTRACTOR
			ORDER BY  L.PRICE_SAL DESC -- L.INVOICE_DATE DESC
        ) LAST_LOT ON LAST_LOT.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL

	


		INSERT INTO #LAST_LOT_INFO
		SELECT
			GROUP_ID = 2,
			NAME ='Цена поставщика',
			VALUE_CHAR = CONVERT(VARCHAR(300), NULL),
			VALUE_DATE = CONVERT(DATETIME, NULL),
			VALUE_MONEY = LLI.PRICE_SUP0,
			IN_SHORT = CONVERT(BIT, 0),
			VALUE_TYPE = 3,
			IS_PRICE_SAL = 0,
			PRIORITY = 0
		FROM #LAST_LOT_INFO_NETWORK LLI
		UNION
		SELECT
			2,
			'Цена поставщика с НДС',
			CONVERT(VARCHAR(300), NULL),
			CONVERT(DATETIME, NULL),
			LLI.PRICE_SUP,
			CONVERT(BIT, 0),
			3,
			0,
			1
		FROM #LAST_LOT_INFO_NETWORK LLI
		UNION
		SELECT
			2,
			'Цена отпускная',
			CONVERT(VARCHAR(300), NULL),
			CONVERT(DATETIME, NULL),
			LLI.PRICE_SAL,
			1,
			3,
			1,
			2
		FROM #LAST_LOT_INFO_NETWORK LLI
		UNION
		SELECT
			2,
			CONVERT(VARCHAR(100), NULL),
			CONVERT(VARCHAR(300), NULL),
			CONVERT(DATETIME, NULL),
			QTY_REM,
			CONVERT(BIT, 0),
			3,
			0,
			3
		FROM #LAST_LOT_INFO_NETWORK LLI
		UNION
		SELECT
			2,
			'Последняя поставка',
			CONVERT(VARCHAR(300), NULL),
			DATE_OP,
			CONVERT(MONEY, NULL),
			1,
			2,
			0,
			4
		FROM #LAST_LOT_INFO_NETWORK LLI
		UNION
		SELECT
			2,
			'Поставщик',
			SUPPLIER,
			CONVERT(DATETIME, NULL),
			CONVERT(MONEY, NULL),
			1,
			1,
			0,
			5
		FROM #LAST_LOT_INFO_NETWORK LLI

	END


    CREATE TABLE #GROUPS(
        GROUP_ID INT,
        GROUP_NAME VARCHAR(100),
        HAS_HISTORY BIT,
        PRIORITY INT
    )
    INSERT INTO #GROUPS
    EXEC USP_INVOICE_LAST_LOTS_GROUPS
    
    SELECT GROUP_ID, GROUP_NAME, HAS_HISTORY, PRIORITY
    FROM #GROUPS G
    WHERE EXISTS (SELECT NULL FROM #LAST_LOT_INFO LLI WHERE LLI.GROUP_ID = G.GROUP_ID)
    
	-- какой то глюк - пустое поле 
	UPDATE #LAST_LOT_INFO
	SET [NAME] = 'Остаток на складе'
	WHERE [NAME] IS NULL



	DECLARE @LOT_FOR_PRICE uniqueidentifier
	SET @LOT_FOR_PRICE = (SELECT TOP 1  ID_LOT_GLOBAL FROM #LOT_RAW ORDER BY PRICE_SAL DESC)

	IF @LOT_FOR_PRICE IS NOT NULL
		BEGIN
			UPDATE #LAST_LOT_INFO
			SET VALUE_MONEY = (SELECT top 1 PRICE_SUP-PVAT_SUP from LOT WHERE ID_LOT_GLOBAL = @LOT_FOR_PRICE)
			WHERE [NAME] = 'Цена поставщика'

			UPDATE #LAST_LOT_INFO
			SET VALUE_MONEY = (SELECT top 1 PRICE_SUP from LOT          WHERE ID_LOT_GLOBAL = @LOT_FOR_PRICE)
			WHERE [NAME] = 'Цена поставщика с НДС'

			UPDATE #LAST_LOT_INFO
			SET VALUE_MONEY = (SELECT top 1 PRICE_SAL from LOT          WHERE ID_LOT_GLOBAL = @LOT_FOR_PRICE)
			WHERE [NAME] = 'Цена отпускная'

		END

    SELECT GROUP_ID, NAME, VALUE_CHAR, VALUE_DATE, VALUE_MONEY, IN_SHORT, VALUE_TYPE, IS_PRICE_SAL, PRIORITY
    FROM #LAST_LOT_INFO LLI
    ORDER BY LLI.GROUP_ID, LLI.PRIORITY

	

	SELECT * FROM #LOT_RAW
	ORDER BY PRICE_SAL DESC

RETURN
