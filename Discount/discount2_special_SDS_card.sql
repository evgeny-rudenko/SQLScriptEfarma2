USE [Farma]
GO
/****** Object:  StoredProcedure [dbo].[DISCOUNT2_SPECIAL_SDS_CARD]    Script Date: 07/16/2017 19:50:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[DISCOUNT2_SPECIAL_SDS_CARD](
    @ID_DISCOUNT2_PROGRAM_GLOBAL UNIQUEIDENTIFIER
)    
AS
    DECLARE @WORK_DATE DATETIME
    SELECT TOP 1 
        @WORK_DATE = CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, CHEQUE_DATE)))
    FROM #CHEQUEINFO
    
    DECLARE @CARDN VARCHAR(25)
    SELECT @CARDN = LEFT(BARCODE,25)
    FROM #SPECIAL_PARAMS

    DECLARE @AVAILABLE_LIMIT MONEY
    
    SELECT
        @AVAILABLE_LIMIT = A.LIMIT
    FROM DBO.FN_DISCOUNT2_SPECIAL_SDS_CARD_LIMIT_ON_DATE(@CARDN, @WORK_DATE) A
    WHERE A.CARDN = @CARDN        
    
    IF (ISNULL(@AVAILABLE_LIMIT,0)<=0)
        RETURN

    DECLARE @SUM_WITH_DISCOUNT NUMERIC(18,10)
    SELECT 
        @SUM_WITH_DISCOUNT = SUM(SUM_WITH_DISCOUNT) 
    FROM #CHEQUEINFO

    DECLARE @CHEQUEITEMS TABLE(
        ID_LOT_GLOBAL UNIQUEIDENTIFIER,
        SUM_WITH_DISCOUNT MONEY,
        RATING MONEY,
        DISCOUNT_VALUE MONEY
    )

    INSERT INTO @CHEQUEITEMS(
        ID_LOT_GLOBAL,
        SUM_WITH_DISCOUNT,
        RATING
    )
    SELECT
        ID_LOT_GLOBAL,
        SUM_WITH_DISCOUNT,
        RATING = CONVERT(NUMERIC(18,10), SUM_WITH_DISCOUNT) / @SUM_WITH_DISCOUNT
    FROM #CHEQUEINFO
    
    DECLARE @REMAIN MONEY
    SET @REMAIN = @AVAILABLE_LIMIT

    DECLARE RATING_CUR CURSOR LOCAL FORWARD_ONLY READ_ONLY FOR
    SELECT
        ID_LOT_GLOBAL,
        RATING
    FROM @CHEQUEITEMS

    DECLARE @ID_LOT_GLOBAL UNIQUEIDENTIFIER
    DECLARE @RATING NUMERIC(18,10)

    DECLARE @COUNTER INT
    SET @COUNTER=0

    DECLARE @IS_LAST BIT
    SET @IS_LAST = 0 

    OPEN RATING_CUR
    WHILE (1=1) BEGIN
        FETCH NEXT FROM RATING_CUR INTO @ID_LOT_GLOBAL, @RATING
        IF (@@FETCH_STATUS<>0) BREAK

        SET @COUNTER=@COUNTER+1

        SELECT @IS_LAST = 1
        FROM @CHEQUEITEMS
        HAVING COUNT(*)=@COUNTER
        
        DECLARE @CURRENT_DISCOUNT MONEY
        SET @CURRENT_DISCOUNT = CASE WHEN ROUND(@AVAILABLE_LIMIT * @RATING, 2)>@REMAIN OR @IS_LAST=1 THEN @REMAIN ELSE ROUND(@AVAILABLE_LIMIT * @RATING, 2) END

        UPDATE T SET
            DISCOUNT_VALUE = CASE WHEN @CURRENT_DISCOUNT>SUM_WITH_DISCOUNT THEN SUM_WITH_DISCOUNT ELSE @CURRENT_DISCOUNT END
        FROM @CHEQUEITEMS T
        WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL

        SELECT @REMAIN = @REMAIN - DISCOUNT_VALUE
        FROM @CHEQUEITEMS T
        WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL

        IF (@REMAIN=0)
            BREAK
    END
    CLOSE RATING_CUR
    DEALLOCATE RATING_CUR

    UPDATE CI SET
        SUM_WITH_DISCOUNT = CI.SUM_WITH_DISCOUNT - ISNULL(T.DISCOUNT_VALUE,0),
        DISCOUNT_VALUE = ISNULL(CI.DISCOUNT_VALUE,0) + ISNULL(T.DISCOUNT_VALUE,0)
    FROM #CHEQUEINFO CI
    INNER JOIN @CHEQUEITEMS T ON T.ID_LOT_GLOBAL = CI.ID_LOT_GLOBAL
RETURN